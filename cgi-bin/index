#!/bin/bash

# hardcoded paths because setting environment variables for CGI tramples the PATH variable
JQ="/usr/local/bin/jq"
	# jq: JSON-parsing command-line tool. Using it so that node can return multiple pieces.
	# I could alternatively have node generate the entire response; don't know file io yet.
NODE="/usr/local/bin/node"
PANDOC="/usr/local/bin/pandoc"
ASSETS="/Users/haggai/tripleByte/httpserver/assets"

JSON=$($NODE $ASSETS/index.js)
# returns {"cookie":"Set-cookie: name=foo","body":"markdown-formatted text"}
# or {"cookie":"", "body":"..."} if no cookie to set.

COOKIE=$(<<<"$JSON" $JQ -r .cookie)
BODY=$(<<<"$JSON" $JQ -r .body | $PANDOC -f markdown -t html)

if test -z "$COOKIE"
then
	printf -v HEADERS %s\\r\\n\\r\\n 'Content-type: text/html; charset=utf-8'
else
	printf -v HEADERS %s\\r\\n%s\\r\\n\\r\\n 'Content-type: text/html; charset=utf-8' "$COOKIE"
fi

wrap () {
	cat $ASSETS/header.html - $ASSETS/footer.html
}

DOC=$(<<<"$BODY" wrap)


printf %s%s "$HEADERS" "$DOC"
